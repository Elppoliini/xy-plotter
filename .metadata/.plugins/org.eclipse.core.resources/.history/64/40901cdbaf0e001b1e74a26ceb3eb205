/*
 * G1.cpp
 *
 *  Created on: 23 Sep 2020
 *      Author: johan
 */

#include "G1.h"

G1::G1() {
	// TODO Auto-generated constructor stub

}
void G1::calibration()
{
	int countY, countX, sumY, sumX;

	M11 m11;
	for(int i=0;i<5;++i){
		while(m11.checkLimYP() == true)
		{
			RIT_start(2,1000000/(1000*2),true);
		}
		while(m11.checkLimYM() == true)
		{
			RIT_start(2,1000000/(1000*2),true);
		}

		while(m11.checkLimXP() == true)
		{
			RIT_start(2,1000000/(1000*2),false);
		}

		while(m11.checkLimXP() == true)
		{
			RIT_start(2,1000000/(1000*2),false);
		}
	}
}

std::string G1::reply(std::vector<std::string> str_,struct Tasks *t){

	return " \r\n";

}


