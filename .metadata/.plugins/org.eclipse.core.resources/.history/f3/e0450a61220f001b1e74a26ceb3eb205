/*
 * G1.cpp
 *
 *  Created on: 23 Sep 2020
 *      Author: johan
 */

#include "G1.h"

G1::G1() {
	// TODO Auto-generated constructor stub
}
void plotLineLow(double x0, double x1, double y0, double y1){
	dx = x1 - x0;
	dy = y1 - y0;
	yi = 1;
	if (dy < 0){
		yi = -1;
		dy = -dy;
	}
	D = (2 * dy) - dx;
	y = y0;

	//for (x from x0 to x1()){
		plot(x, y);
		if (D > 0){
			y = y + yi;
			D = D + (2 * (dy - dx));

			else{
				D = D + 2*dy;
			}
		//}
	}

	bool G1::isNumber(int pos){
		int count=0;

		for(int i = 0; i< (int)str[pos].length(); i++)
		{
			if(isdigit((int)str[pos][i])!=0 || (int)str[pos][i]== '.'|| (int)str[pos][i]== '-'){
				count++;
			}
		}
		if(count == (int)str[pos].length())
		{
			return true;
		}else
		{
			ITM_write(" G1 nr failed! \r\n");
			return false;
		}
	}

	bool G1::checkCommands(std::string letter,int pos){

		int check =0;
		for(int i=0;i<(int)letter.length();i++){
			if(str[pos][i] == letter[check])
			{
				check++;
			}
		}
		if(check == (int)letter.length())
		{
			str[pos].erase(0,letter.length());
			return true;
		}
		ITM_write("M2 letter failed\r\n");
		return false ;
	}

	std::string G1::reply(std::vector<std::string> str_,struct Tasks *t){
		str = str_;
		tempt = *t;
		if(checkCommands("X",1) == true && isNumber(1) == true){
			t->xCord = atof(str[1].c_str());
			double steps = (t->xCord)*(t->stepsize);
			t->x1 = steps;
		}
		if(checkCommands("Y",2) == true && isNumber(2) == true){
			t->yCord = atof(str[2].c_str());
			double steps = (t->yCord)*(t->stepsize);
			t->y1 = steps;
		}

		return "OK\r\n";

	}


